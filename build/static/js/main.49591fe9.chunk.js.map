{"version":3,"sources":["components/FilterForm.js","components/AddNewForm.js","components/ListOfPersons.js","services/serviceclient.js","components/Notification.js","App.js","index.js"],"names":["FilterForm","props","onChange","handleFilterChange","AddNewForm","value","nameValue","nameOnChange","numberValue","numberOnChange","onClick","addNewPerson","ListOfPersons","showPersons","map","person","name","number","handleDeleteClick","id","baseUrl","axios","get","then","response","data","personObject","post","newName","newNumber","console","log","newPerson","put","delete","Notification","succesfulAction","color","fontSize","border","backgroundColor","marginBottom","borderRadius","style","notification","App","useState","setNewName","setNewNumber","setShowPersons","setNotification","notificationColor","setNotificationColor","useEffect","serviceclient","a","catch","error","event","filter","toLowerCase","includes","target","some","window","confirm","find","setTimeout","preventDefault","concat","dir","ReactDOM","render","document","getElementById"],"mappings":"oKAQeA,EARI,SAACC,GAClB,OACE,qDACoB,uBAAOC,SAAUD,EAAME,yBCahCC,EAhBI,SAACH,GAClB,OACE,iCACE,yCACQ,uBAAOI,MAAOJ,EAAMK,UAAWJ,SAAUD,EAAMM,kBAEvD,0CAEE,uBAAOF,MAAOJ,EAAMO,YAAaN,SAAUD,EAAMQ,oBAEnD,wBACA,wBAAQC,QAAST,EAAMU,aAAvB,qBCYSC,EAvBO,SAACX,GACrB,OACE,8BACE,6BACGA,EAAMY,YAAYC,KAAI,SAACC,GACtB,OACE,+BACGA,EAAOC,KADV,IACiBD,EAAOE,OAAQ,IAC9B,wBACEP,QAAS,WACPT,EAAMiB,kBAAkBH,EAAOI,GAAIJ,EAAOC,OAF9C,sBAFOD,EAAOI,Y,gBCLtBC,EAAU,gBAoBD,EAlBA,WAGb,OAFgBC,IAAMC,IAAIF,GAEXG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAe9B,EAbI,SAACC,GAClB,OAAOL,IAAMM,KAAKP,EAASM,IAYd,EALM,SAACX,EAAQa,EAASC,GACrCC,QAAQC,IAAIhB,GACZ,IAAMiB,EAAY,CAAEb,GAAIJ,EAAOI,GAAIH,KAAMY,EAASX,OAAQY,GAC1DR,IAAMY,IAAIb,EAAUL,EAAOI,GAAIa,GAAWT,MAAK,SAACC,GAAD,OAAcA,EAASC,SAEzD,EAVM,SAACN,GAEpB,OADAW,QAAQC,IAAI,qBAAuBZ,GAC5BE,IAAMa,OAAOd,EAAUD,GAAII,MAAK,SAACC,GAAD,OAAcA,EAASC,SCDjDU,EAZM,SAAClC,GACpB,IAAMmC,EAAkB,CACtBC,MAAOpC,EAAMoC,MAEbC,SAAU,GACVC,OAAQ,kBACRC,gBAAiB,OACjBC,aAAc,GACdC,aAAc,GAEhB,OAAO,qBAAKC,MAAOP,EAAZ,SAA8BnC,EAAM2C,gBCoH9BC,EAvHH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOlB,EAAP,KAAgBmB,EAAhB,KACA,EAAkCD,mBAAS,GAA3C,mBAAOjB,EAAP,KAAkBmB,EAAlB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOjC,EAAP,KAAoBoC,EAApB,KACA,EAAwCH,mBAAS,IAAjD,mBAAOF,EAAP,KAAqBM,EAArB,KACA,EAAkDJ,mBAAS,SAA3D,mBAAOK,EAAP,KAA0BC,EAA1B,KASAC,qBAPa,WACXC,IAEG/B,MAAK,SAACgC,GAAD,OAAON,EAAeM,MAC3BC,OAAM,SAACC,GAAD,OAAW3B,QAAQC,IAAI,mBAAqB0B,QAGvC,IAkFhB,OACE,gCACE,2CACA,cAAC,EAAD,CAAcb,aAAcA,EAAcP,MAAOc,IACjD,cAAC,EAAD,CAAYhD,mBAvBW,SAACuD,GAC1BT,EACEpC,EAAY8C,QAAO,SAAC5C,GAAD,OACjBA,EAAOC,KAAK4C,cAAcC,SAASH,EAAMI,OAAOzD,MAAMuD,sBAqBxD,yCACA,cAAC,EAAD,CACEtD,UAAWsB,EACXpB,YAAaqB,EACbtB,aAlCmB,SAACmD,GACxBX,EAAWW,EAAMI,OAAOzD,QAkCpBI,eAhCqB,SAACiD,GAC1BV,EAAaU,EAAMI,OAAOzD,QAgCtBM,aA3Fe,SAAC+C,GACD7C,EAAYkD,MAAK,SAAChD,GAAD,OAAYA,EAAOC,OAASY,KAG5DoC,OAAOC,QAAP,UACKrC,EADL,0EAIA0B,EAEIzC,EAAYqD,MAAK,SAACX,GAAD,OAAOA,EAAEvC,OAASY,KACnCA,EACAC,GAEDN,MAAK,SAACC,GACLyB,EACEpC,EAAYC,KAAI,SAACyC,GAAD,OAAQA,EAAEpC,KAAOK,EAASL,GAAKoC,EAAI/B,KACnD0B,EAAgB,qBAAD,OAAsBtB,EAAtB,MACfuC,YAAW,WACTjB,EAAgB,QACf,SAGNM,OAAM,SAACC,GACN3B,QAAQC,IAAI0B,OAKlBC,EAAMU,iBAKNd,EAJqB,CACnBtC,KAAMY,EACNX,OAAQY,IAIPN,MAAK,SAACC,GACLyB,EAAepC,EAAYwD,OAAO7C,EAASC,OAC3CyB,EAAgB,SAAD,OAAUtB,IACzBuC,YAAW,WACTjB,EAAgB,QACf,QAEJM,OAAM,SAACC,GACN3B,QAAQwC,IAAIb,EAAMjC,UAClB0B,EAAgBO,EAAMjC,SAASC,MAC/B2B,EAAqB,UAErBe,YAAW,WACTjB,EAAgB,MAChBE,EAAqB,WACpB,YA0CP,yCAEA,cAAC,EAAD,CACEvC,YAAaA,EACbK,kBA7BoB,SAACC,EAAIH,GACzBgD,OAAOC,QAAP,iBAAyBjD,EAAzB,OACFsC,EAA2BnC,GAAII,MAAK,SAACC,GACnCyB,EAAepC,EAAY8C,QAAO,SAAC5C,GAAD,OAAYA,EAAOI,KAAOA,MAC5D+B,EAAgB,YAAD,OAAalC,IAC5BoC,EAAqB,UACrBe,YAAW,WACTjB,EAAgB,MAChBE,EAAqB,WACpB,eCjGXmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.49591fe9.chunk.js","sourcesContent":["const FilterForm = (props) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input onChange={props.handleFilterChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterForm;\r\n","const AddNewForm = (props) => {\r\n  return (\r\n    <form>\r\n      <div>\r\n        name: <input value={props.nameValue} onChange={props.nameOnChange} />\r\n      </div>\r\n      <div>\r\n        number:\r\n        <input value={props.numberValue} onChange={props.numberOnChange} />\r\n      </div>\r\n      <div></div>\r\n      <button onClick={props.addNewPerson}>add</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddNewForm;\r\n","const ListOfPersons = (props) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {props.showPersons.map((person) => {\r\n          return (\r\n            <li key={person.id}>\r\n              {person.name} {person.number}{\" \"}\r\n              <button\r\n                onClick={() => {\r\n                  props.handleDeleteClick(person.id, person.name);\r\n                }}\r\n              >\r\n                delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListOfPersons;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons/\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n\r\n  return request.then((response) => response.data);\r\n};\r\nconst postPerson = (personObject) => {\r\n  return axios.post(baseUrl, personObject);\r\n};\r\nconst deletePerson = (id) => {\r\n  console.log(\"Delete person id: \" + id);\r\n  return axios.delete(baseUrl + id).then((response) => response.data);\r\n};\r\n\r\nconst updatePerson = (person, newName, newNumber) => {\r\n  console.log(person);\r\n  const newPerson = { id: person.id, name: newName, number: newNumber };\r\n  axios.put(baseUrl + person.id, newPerson).then((response) => response.data);\r\n};\r\nexport default {\r\n  getAll,\r\n  postPerson,\r\n  updatePerson,\r\n  deletePerson,\r\n};\r\n","const Notification = (props) => {\r\n  const succesfulAction = {\r\n    color: props.color,\r\n\r\n    fontSize: 27,\r\n    border: \"1px solid black\",\r\n    backgroundColor: \"snow\",\r\n    marginBottom: 40,\r\n    borderRadius: 4,\r\n  };\r\n  return <div style={succesfulAction}>{props.notification}</div>;\r\n};\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\nimport FilterForm from \"./components/FilterForm\";\nimport AddNewForm from \"./components/AddNewForm\";\nimport ListOfPersons from \"./components/ListOfPersons\";\nimport serviceclient from \"./services/serviceclient\";\n\nimport Notification from \"./components/Notification\";\nconst App = () => {\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(0);\n  const [showPersons, setShowPersons] = useState([]);\n  const [notification, setNotification] = useState(\"\");\n  const [notificationColor, setNotificationColor] = useState(\"green\");\n\n  const hook = () => {\n    serviceclient\n      .getAll()\n      .then((a) => setShowPersons(a))\n      .catch((error) => console.log(\"Errori hookissa \" + error));\n  };\n\n  useEffect(hook, []);\n\n  const addNewPerson = (event) => {\n    let alreadyAdded = showPersons.some((person) => person.name === newName);\n    if (alreadyAdded) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with new one?`\n        )\n      ) {\n        serviceclient\n          .updatePerson(\n            showPersons.find((a) => a.name === newName),\n            newName,\n            newNumber\n          )\n          .then((response) => {\n            setShowPersons(\n              showPersons.map((a) => (a.id !== response.id ? a : response)),\n              setNotification(`Updated number of ${newName} `),\n              setTimeout(() => {\n                setNotification(null);\n              }, 5000)\n            );\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n      //alert(`${newName} is already added to phonebook`);\n    } else {\n      event.preventDefault();\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      };\n      serviceclient\n        .postPerson(personObject)\n        .then((response) => {\n          setShowPersons(showPersons.concat(response.data));\n          setNotification(`Added ${newName}`);\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          console.dir(error.response);\n          setNotification(error.response.data);\n          setNotificationColor(\"orange\");\n\n          setTimeout(() => {\n            setNotification(null);\n            setNotificationColor(\"green\");\n          }, 5000);\n        });\n    }\n  };\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n  const handleFilterChange = (event) => {\n    setShowPersons(\n      showPersons.filter((person) =>\n        person.name.toLowerCase().includes(event.target.value.toLowerCase())\n      )\n    );\n  };\n  const handleDeleteClick = (id, name) => {\n    if (window.confirm(`Delete ${name}?`))\n      serviceclient.deletePerson(id).then((response) => {\n        setShowPersons(showPersons.filter((person) => person.id !== id));\n        setNotification(`Deleted  ${name}`);\n        setNotificationColor(\"orange\");\n        setTimeout(() => {\n          setNotification(null);\n          setNotificationColor(\"green\");\n        }, 5000);\n      });\n  };\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} color={notificationColor} />\n      <FilterForm handleFilterChange={handleFilterChange} />\n      <h2>Add New</h2>\n      <AddNewForm\n        nameValue={newName}\n        numberValue={newNumber}\n        nameOnChange={handleNameChange}\n        numberOnChange={handleNumberChange}\n        addNewPerson={addNewPerson}\n      />\n      <h2>Numbers</h2>\n\n      <ListOfPersons\n        showPersons={showPersons}\n        handleDeleteClick={handleDeleteClick}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}